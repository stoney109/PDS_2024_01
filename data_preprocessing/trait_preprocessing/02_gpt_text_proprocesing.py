import re
import pandas as pd


'''
◆ 콤마로 분리한 각 특성의 개수
전처리 이전, 7711개의 특성
전처리 이후, 2749개의 특성(1개인 특성 개수를 제외하면 766개: 이 개수는 unique_counts 폴더의 trait_gpt_counts 파일을 통해 확인할 수 있습니다.)
'''


# 파일 읽기
file_path = 'separate_gpt_trait_data.csv'  # 실제 경로로 변경
data = pd.read_csv(file_path, encoding='utf-8-sig')


# 제외할 단어 정규표현식 패턴 정의 (전처리 전)
exclude_rules_before = (
    # 색상 및 무늬 관련
    "흰|하얀|화이트|크림|베이지|검은|검정|블랙|다크|회|갈|노란|노랑|주황|빨간|분홍|핑크|보라|파란|파랑|초록|청록|은|금|골든|살구|초코|카키|연두|하늘|다색|"
    "얼룩|점박|얼룩진|혼합된|복합적인|밝은|어두운|짙은|진한|색|컬러|쫑긋|순백|무늬|블랙탄|"
    
    # 착용 상태 관련
    "목테|테착|목줄|목끈|방울|목걸이|하네스|옷|줄|착용|"
    
    # 시스템과 관련한 불필요한 표현 및 기타
    "개체|마리|입소|입양|표정|책임|공고|신고|긴급|의무|구조|조사|적발|발견|포획|고양이|사군자|키우|외상없음|외상안보임|멍뭉|양눈|양귀|눈|눈빛|"

    # 품종 관련
    "믹스|혼종|혼혈|진도|진돗개|요크|닥스|말티|푸들|스피츠|빠삐용|리트|라브라도|시고르|사모|시바|비숑|테리어|미니핀|셰퍼트|"
    
    # 다른 컬럼에 이미 존재하는 정보 관련
    "성별|수컷|암컷|중성화|kg|출생"
)

# 제외할 단어 정규표현식 패턴 정의 (전처리 후)
exclude_rules_after = (
    # 시스템과 관련한 불필요한 표현 및 기타
    "멍|가족|평생|기다림|소중|임시보호|임보|보호자|No|"
    
    # 다른 컬럼에 이미 존재하는 정보 및 불필요한 표현 관련
    "성별|가슴|허리|얼굴|체중|크기"
)

# 매핑 규칙 : 정규표현식 패턴, 전체 글자가 일치해야 변환
fullmatch_rules = {
    # 친화적 O/X
    r"무서운|무서워함|무서워해요|불친절함|사람무시|사람거부|사람피함|사람불안|사람안따름|사람무서움|사람불애정|친화력부족|친화력낮음|사람을피함|사람싫어함|사람손길거부|천천히친해짐|사람따르기싫음|"
    r"만짐어려움|만짐주의|만짐거부|손길거부|만짐불가|만질수없음|만질때이드러냄|만질때비명지름|쓰다듬기거부|사람무서워함|사람을무서워함|사람따르지않음|사람손타지않음|어린자녀미흡|어린자녀부적합|사람친화적하지않음": "친화적X",
    r"인싸|친화|친밀|친숙|친화력|친밀성|친화성|친근함|친밀한|친숙함|가족적|친화적인|친화적함|사람친화|사람따름|사람친구|사람친화성|가족친화력|가족친화적|무서움없음|얼굴만지기좋아|"
    r"사람친화적|가족친화적|친화력좋음|아이친화적|주인친화적|금방친해짐|친화성강한|친화력높음|친밀도높은|사람친화적함|가족어울림|어린자녀적합|어린자녀와적합|만지기허용|"
    r"어린이친화적|쉽게친해지는|사람친화적인|빠르게친해짐|어린자녀친화적|초보자친화적|어린자녀친화적|어린자녀와어울림|어린자녀와잘어울림|강아지친구를좋아하|다가오는|다가옴": "친화적",

    # 활발 O/X
    r"활력저하|활력소실|활발함부족|활발하지않음": "활발X",
    r"활발|활력|활동|활기|쾌활|활달함|활발함|활발한|쾌활한|활동적|활기찬|활동력|활발성|쾌활함|운동량|운동적|운동장|운동능력|운동적성|"
    r"파워풀|파워풀함|활력넘침|에너제틱|에너제틱함|활발하다|활기넘침|활동량많음|활기를넣어줌|야외활동좋아함": "활발",

    r"겁없음": "겁X",
    
    r"귀엽|귀염|귀요미|귀엽다|귀엽게|귀엽음|귀여운|대존귀|귀요밍|깜찍함|깜찍이|귀염둥이|귀염뽀작|왕귀여움|귀염뽀짝|귀염뽀작함|귀여운털|진흙귀여움|외모귀여움|귀여운외모|"
    r"작고귀엽|귀여운눈빛|귀엽게생김|귀여운얼굴|귀여운모습|귀여운스타일|귀여운검점|외모가귀엽다|포동포동귀여움|외모가귀엽고작음|눈이동그랗고귀엽다|귀엽고사랑스러운외모": "귀여움",

    r"단미안|단미안됨|단미불가|단미안함|단미부적|꼬리단미안|단미않음|단미불가|단미안됨|꼬리단미안|꼬리단미안됨|꼬리단미안함|꼬리단미안한|"
    r"꼬리단미불가|꼬리단미불편|단미안됨|꼬리단미거부|꼬리단미불가능|꼬리단미불가|꼬리단미불허|꼬리단미안됨|단미하지않음|꼬리단미안됨|"
    r"꼬리단미안함|꼬리단미안됨|꼬리단미않음|꼬리단미거부|꼬리단미방지|꼬리단미불가|꼬리단미안됨|꼬리단미불가능|꼬리미안됨|"
    r"꼬리:단미안됨|꼬리단미안됨,털상태|꼬리:단미안됨|꼬리를단미하지않는|꼬리물지않음|꼬리물지않는": "꼬리단미X",

    r"꼬리단|꼬리단단|꼬리단단한": "꼬리단단함",

    # 긴다리/짧은다리
    r"다리긺|롱다리|다리긴편|다리길다|다리가긴|다리가김|다리가길다|길쭉한다리|다리길고날씬|길고늘씬한다리|길쭉한몸과다리": "긴다리",
    r"짧다리|다리짧음|앞다리짧음|단축된다리|다리짧고두툼": "짧은다리",

    # 사나움/온순함
    r"공격적|공격성|사나운|다혈질|사나워|사납다|무서움|공격피로|공격적인행동": "사나움",
    r"공격성제로|공격성없음|공격성없는|공격성이없음": "온순함",

    # 입질 O/X
    r"물진|입질안|물지않음|입질안함|입질이적음|깨물기싫어함|사람을물지않음": "입질X",
    r"사람물음": "입질O",

    # 칩(강아지정보) O/X
    r"칩없음|칩없는|칩미착용|내장칩없음|내장칩부재|발견후등록|칩확인:없음|내장칩미착용|내장칩미장착|내장칩미등록|내장칩미포함": "칩X",
    r"칩|칩유|칩내장|식별칩|외장칩|칩있는|내장칩|칩장착|칩있음|칩이있는|동물등록|칩장착됨|동물등록됨|내장칩있음|등록번호있음|내장칩시술|반려동물등록|칩이있는반환|칩이심어져있음": "칩O",

    # 털 상태 관련
    r"털상태좋음|털상태양호|털상태부좋음|털상태양슬개골": "털상태양호",
    r"털": "털상태미상",
    r"털탐|거친털|털뭉침|털불량|짝거친털|털미관리|몸털뭉침|털상태푸석|털관리필요|털관리요구|털상태나쁨|털상태안좋음|털상태불량귀쫑": "털상태불량",
    r"털빠짐적음|털빠짐이적음": "털빠짐X",

    r"분리불안없음": "분리불안X",

    # 심장사상충 관련
    r"심장음성|HW음성|CHW음성|사상충음성|심장사상충없음|사상충검사음성|신장사상충음성|심장사상충음성|심장사상충음성1017|중심장사상충검사음성": "심장사상충X",
    r"사상충|심장양성|HW양성|CHW양성|사상충양성|사상충감염|신장사상충감염|심장사상충감염|심장사상충의심|심장사상충感染|심장사상충영양|심장사상충양성|심장사상충양성03|심장사상충치료중": "심장사상충O",
    r"데피니트|애니하트복용|심장사상충예방|수액심장사상충검사|심장사상충예방약|심장사사충예방약|심장사상충예방치료|심장사상충예방약복용": "심장사상충접종",

    # 코로나 장염 관련
    r"CCV음성|코로나음성": "코로나장염X",
    r"장염|CCV|코로나|코로나양성|혈변코로나|코로나장염|췌장염가능|코로나바이러스": "코로나장염O",
    r"코로나백신|코로나예방|코로나접종|코로나예방접종|코로나장염접종|코로나장염백신|코로나백신0111|코로나장염예방접종": "코로나장염접종",

    # 홍역 관련
    r"홍역음성|CDV음성|홍역음성03|기침홍역:음성|콧물홍역음성|홍역검사음성|홍역·파보음성|콧물홍역부정|틱증상홍역음성": "홍역X",
    r"홍역|CDV|홍역양성|홍역발생": "홍역O",

    # 파보바이러스 관련
    r"CPV음성|파보음성|파보사상충|파보장염음성|혈변파보음성|파보음성0111|파보바이러스미검출": "파보바이러스X",
    r"파보|CPV|cpv양성|파보코|설사파보|구토파보|파보양성|파보바이러스|파보초기판정|설사흔적파보|파보바이러스장염|파보바이러스장염양성": "파보바이러스O",

    r"GIDI음성|지알디아음성": "지알디아X",

    r"옴|전신옴감염": "옴감염",

    r"치아결손|치아파열|끝부러짐|부러진앞니|이빨부러짐|치아손상심|송곳니부러짐|송곳니끝부러짐|양송곳니부러짐|오른위송곳니부러짐|오른윗송곳니중간부러짐": "치아손상",

    r"영구치없음|앞니영구치|영구치나는|영구치나는중": "유치잔존",

    # 배변 훈련 관련
    r"패드사용|배변가림|패드배변|패드훈련|배변깔끔함|패드배변완벽|패드배변능력|패드배변잘함|배변훈련잘됨|패드배변터득|패드배변잘하는": "배변훈련O",
    r"배변훈련|패드훈련중|배변훈련중|패드배변훈련|패드배변훈련중|패드배변훈련중인": "배변훈련중",
    r"배변|배변교육필요|배변활동이상|배변훈련필요|패드배변미흡|배변훈련미완료": "배변훈련X",

    r"식욕부진|식욕없음|식욕소실|간식거부": "식욕부진",

    r"건강문제|건강나쁨|건강상태나쁨|건강관리요구|건강상태미지료": "건강불량",

    r"귀|코|손|턱|배|외모|입가|어깨|꼬리|머리|이마|엉덩이|정수리|겨드랑이": "",
}

# 매핑 규칙 : 정규표현식 패턴, 해당 글자가 일부만 포함되더라도 변환
partialmatch_rules = {
    r"칩": "칩U",
    r"잃": "유실",
    r"경계": "경계",
    r"산책": "산책필요",
    r"외로|불안": "분리불안O",
    r"버|버려|유기": "유기",
    r"단미|꼬리단미|꼬리절단|꼬리 단미|단미된 꼬리": "꼬리단미O",
    r"입질|물음|물림|물기|물려요": "입질O",

    r"먹|식욕|간식|빠른식사": "식탐",
    r"편식": "편식",
    r"겁|엄살|두려|두렵|쫄보|불쌍|엄쟁이": "겁O",
    r"랄|놀이|놀기|적극|명랑|에너지|기운넘침": "활발",
    r"순|착한|착함|천진|온화|얌전|차분": "온순",
    r"사랑스|사랑둥": "사랑스러움",
    r"사랑|관심|노력|손이많이|애정요구|애정필요": "관심필요",
    r"똑|똘|똑똑|총명|영리|명석": "똑똑",
    r"멍청|댕청": "멍청",
    r"낯|만지|피함|다가오": "친화적X",
    r"밝|맑|쓰다|만짐|만질|터치|인기|선한|사교|성격|사람|따르|따름": "친화적",
    r"적응": "적응력",
    r"인내": "인내심",
    r"예민|앙칼|도도|시크": "예민",
    r"안아|안기|안겨|안김": "안기려함",
    r"신중|기품|근엄|믿음|신뢰|의젓|성숙": "신중",
    r"충성|충실": "충성심",
    r"떨|떪|긴장|덜덜|천천|놀람|놀램|놀라기|놀라는": "긴장",
    r"소심|조심|수줍|부끄|자신감부족": "소심",
    r"장난|개구": "장난기",
    r"애교|애정": "애교",
    r"조용|짖지않음|짖지못함|짖는소리없음|짖는목소리작음": "조용",
    r"낑낑|끙끙|깨갱|신음": "낑낑댐",
    r"짖|비명|소리|울음|하울링": "짖음",
    r"싸|위협": "사나움",
    r"흥분": "흥분주의",
    r"움찔|으르|방어|으르렁|방어적": "방어적",
    r"도망": "도망다님",
    r"용기|호기심": "호기심",
    r"용감|용맹|자신감|카리스마": "자신감",

    r"미용": "미용",
    r"샴푸": "샴푸향",
    r"미남|잘생|왕자|도련님|남자다운": "잘생김",
    r"여자|미녀|이쁘|예쁘|예쁜|이쁜|이쁨|예쁨|공주|어여쁜|아가씨": "예쁨",
    r"멋|매력": "매력적",
    r"아름|미모|미인|수려|근사": "미모",
    r"깨끗|청결": "깨끗함",
    r"도깨|가시": "도깨비풀붙음",
    r"알비노": "알비노",
    r"풍성": "풍성한털",
    r"부드|보드|윤기": "털상태양호",
    r"모질|피모|엉킨|엉킴|뭉친|뭉침": "털상태불량",
    r"털상태": "털상태미상",
    r"탈모": "탈모",
    r"털떨|털빠짐": "털빠짐O",
    r"귀접|접힌|접힘": "귀접힘",
    r"쌍": "쌍꺼풀",
    r"며느": "며느리발톱",
    r"발톱": "발톱관리필요",
    r"찜|통실|통통|뚱뚱|과체중|살이쪄서": "비만",
    r"여윔|마름|마른|말라서|말랐음": "여윔",
    r"작|쪼꼬|앙증|아담|소형|미니|토이사이즈|발발이사이즈": "소형견",
    r"중형|크기중간": "중형견",
    r"큼|큰|대형|덩치크": "대형견",
    r"아가|아기|애기|어린|어리다": "강아지",
    r"노화|노견|노령|노성": "노견",
    r"영구치": "영구치",
    r"유치": "유치",
    r"오염|오물|털때|때탄|탈때|때탐|더러|이물|지저분": "오염",

    r"기력|기운": "기력X",
    r"기립": "기립불능",
    r"호흡": "호흡문제",
    r"출혈|혈흔|혈액": "출혈",
    r"빈혈": "빈혈",
    r"영양|식이": "영양관리필요",
    r"설사": "설사",
    r"음식물토": "구토",
    r"마비": "마비",
    r"후지파행": "후지파행",
    r"전지파행": "전지파행",
    r"파행": "파행",
    r"절단": "절단",
    r"절름|절뚝|염좌": "절뚝거림",
    r"탈구": "탈구",
    r"탈장": "탈장",
    r"골절|부러진|부러짐": "골절",
    r"교통|로드|사고": "교통사고",
    r"모낭": "모낭충",
    r"사마귀": "사마귀",
    r"구더기": "구더기",
    r"장파열": "장파열",
    r"인대파열": "인대파열",
    r"진드기": "진드기",
    r"슬|슬개골": "슬개골이상",
    r"심장": "심장질환",
    r"신경": "신경질환",
    r"피부": "피부질환",
    r"관절": "관절질환",
    r"구강": "구강질환",
    r"부정교합": "부정교합",
    r"치석": "치석",
    r"치주염": "치주염",
    r"발정": "발정",
    r"마운팅": "마운팅",
    r"마킹": "마킹습관",
    r"임신|임심": "임신",
    r"수유|유즙|유선": "유선발달",
    r"출산": "출산",
    r"생리": "생리중",
    r"혹|종양": "종양",
    r"부종": "부종",
    r"부음": "붓기",
    r"상처|열상": "상처",
    r"기침": "기침",
    r"콧물": "콧물",
    r"부상": "부상",
    r"멍|타박": "타박상",
    r"탈수": "탈수",
    r"습진": "습진",
    r"각질": "각질",
    r"염증|소염|욕창": "염증",
    r"통증|고통|복통|통각": "통증호소",
    r"흉터": "흉터",
    r"외상": "외상",
    r"괴사": "괴사",
    r"가려움": "가려움증",
    r"위축": "안위축",
    r"팽|배빵빵": "복부팽만",
    r"알러|알레": "알러지",
    r"이염|외이도염": "이염",
    r"결석": "결석",
    r"장애": "장애",
    r"수술": "수술",
    r"틱": "틱증상",
    r"혼탁": "각막혼탁",
    r"백내장": "백내장",
    r"녹내장": "녹내장",
    r"눈곱|눈꼽": "눈곱",
    r"결막염": "결막염",
    r"충혈": "충혈",
    r"결막출혈": "결막출혈",
    r"궤양": "안구궤양",
    r"치료": "치료",
    r"아픔|감염|다친|양성": "건강불량",
    r"건강|음성|튼튼": "건강",

    r"종합": "종합백신접종",
    r"광견병": "광견병백신접종",
    r"구충|데피닛|스팟라인|레볼루션": "구충완료",

    r":": "",
}


def preprocess_traits(traits_column, exclude_patterns):
    """
        주어진 특성 열에서 특정 패턴을 제외하고 전처리하는 함수

        Args:
            traits_column (pd.Series): 특성 데이터 열
            exclude_patterns (str): 제외할 정규표현식 패턴

        Returns:
            pd.Series: 전처리된 특성 열
    """
    def preprocess_row(traits):
        # 온점(.) 제거
        traits = traits.replace('.', '')
        # 제외 패턴이 포함된 항목 제거
        traits_list = [
            trait for trait in traits.split(', ')
            if not re.search(exclude_patterns, trait)
        ]
        return ', '.join(traits_list)

    return traits_column.apply(preprocess_row)


def map_traits_with_regex(traits_column, fullmatch, partialmatch):
    """
        정규표현식 매핑 규칙을 사용하여 특성을 변환하는 함수

        Args:
            traits_column (pd.Series): 특성 데이터 열
            fullmatch (dict): 정규표현식 패턴과 대체값을 가지는 풀 매칭 규칙
            partialmatch (dict): 정규표현식 패턴과 대체값을 가지는 부분 매칭 규칙

        Returns:
            pd.Series: 변환된 특성 열
    """
    def normalize_row(traits):
        normalized = []
        for trait in traits.split(', '):
            trait = trait.replace(" ", "")  # 모든 공백 제거
            matched = False
            # 풀 매칭 규칙 적용
            for pattern, replacement in fullmatch.items():
                if re.fullmatch(pattern, trait):
                    normalized.append(replacement)
                    matched = True
                    break
            # 부분 매칭 규칙 적용
            if not matched:
                for pattern, replacement in partialmatch.items():
                    if re.search(pattern, trait):
                        normalized.append(replacement)
                        matched = True
                        break
            # 매칭되지 않은 항목은 원본 유지
            if not matched:
                normalized.append(trait)
        return ', '.join(set(normalized))  # 중복 제거

    return traits_column.apply(normalize_row)


def remove_single_and_invalid_characters(traits_column):
    """
        한 글자 단어와 숫자/기호가 포함된 단어를 제거하는 함수

        Args:
            traits_column (pd.Series): 특성 데이터 열

        Returns:
            pd.Series: 처리된 특성 열
    """
    def remove_invalid_chars(traits):
        traits_list = [
            trait for trait in traits.split(', ')
            if not (len(trait) <= 1 or re.search(r'[0-9!@#$%^&*()\-_=+\[\]{};:\'",<>./?\\|`~]', trait))
        ]
        return ', '.join(traits_list)

    return traits_column.apply(remove_invalid_chars)


# 1단계: exclude_rules_before 제거 전처리 적용
data['GPT_특성'] = preprocess_traits(data['GPT_특성'], exclude_rules_before)

# 2단계: fullmatch_rules, partialmatch_rules 두 가지 변환 규칙 적용
data['GPT_특성_변환'] = map_traits_with_regex(data['GPT_특성'], fullmatch_rules, partialmatch_rules)

# 3단계: exclude_rules_after 제거 전처리 적용
data['GPT_특성_변환'] = preprocess_traits(data['GPT_특성_변환'], exclude_rules_after)

# 4단계: 한 글자 및 숫자, 특수 문자 제거
data['GPT_특성_변환'] = remove_single_and_invalid_characters(data['GPT_특성_변환'])

# 'GPT_특성' 컬럼 제거
data.drop(columns=['GPT_특성'], inplace=True)

# 'GPT_특성_변환' 컬럼명을 'GPT_특성'으로 변경
data.rename(columns={'GPT_특성_변환': 'GPT_특성'}, inplace=True)

# 'GPT_특성' 열을 문자열로 변환
data['GPT_특성'] = data['GPT_특성'].astype(str)

# 변환된 데이터를 저장
data.to_csv('../../resource/gpt_preprocessed_data/gpt_result_all_data.csv', encoding='utf-8-sig', index=False)
